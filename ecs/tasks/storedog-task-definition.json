{
  "family": "storedog-app-task", // CHOOSE ONE FAMILY NAME
  "networkMode": "bridge",
  "executionRoleArn": "arn:aws:iam::YOUR_AWS_ACCOUNT_ID:role/ecsTaskExecutionRole", // <-- USE FULL ARN AND ENSURE THIS ROLE EXISTS
  // "taskRoleArn": "OPTIONAL_IF_YOUR_APP_NEEDS_AWS_PERMISSIONS",
  "requiresCompatibilities": ["EC2"],
  "cpu": "3072",                 // These are task-level CPU/Memory
  "memory": "10240",               // Ensure this matches your instance capacity
  "containerDefinitions": [
    // --- YOUR POSTGRES CONTAINER DEFINITION ---
    // Consider removing this if using RDS
    {
      "name": "postgres",
      "image": "601427279990.dkr.ecr.ap-southeast-2.amazonaws.com/storedog/postgres",
      "cpu": 512,
      "memory": 1024,
      "memoryReservation": 512,
      "portMappings": [
        {
          "name": "postgres-5432-tcp",
          "containerPort": 5432,
          "hostPort": 5432,
          "protocol": "tcp",
          "appProtocol": "none" // Added for completeness, often optional
        }
      ],
      "essential": true,
      "environment": [
        {"name": "POSTGRES_USER", "value": "postgres"},
        {"name": "POSTGRES_HOST_AUTH_METHOD", "value": "trust"},
        {"name": "DD_AGENT_HOST", "value": "dd-agent"},
        {"name": "DD_VERSION", "value": "7"},
        {"name": "DD_RUNTIME_METRICS_ENABLED", "value": "true"},
        {"name": "DD_SERVICE", "value": "storedog-db"},
        {"name": "DD_LOGS_INJECTION", "value": "true"},
        {"name": "POSTGRES_PASSWORD", "value": "TYtSlJapmfN72hokCP6e"}, // Consider Secrets Manager
        {"name": "DD_ENV", "value": "dev"},
        {"name": "DD_PROFILING_ENABLED", "value": "true"},
        {"name": "DD_DBM_PROPAGATION_MODE", "value": "full"}
      ],
      "mountPoints": [],
      "volumesFrom": [],
      "logConfiguration": {
        "logDriver": "awslogs",
        "options": {
          "awslogs-create-group": "true",
          "awslogs-group": "/ecs/storedog",
          "awslogs-region": "ap-southeast-2",
          "awslogs-stream-prefix": "ecs"
        }
        // "secretOptions": [] // secretOptions is usually for log driver secrets, not general app secrets
      },
      "healthCheck": {
        "command": ["CMD-SHELL", "echo \"healthy\""], // CMD-SHELL is often needed for simple echos
        "interval": 60,
        "timeout": 10,
        "retries": 3
      }
      // "systemControls": [] // Often not needed unless specific kernel params are required
    },
    // --- YOUR REDIS CONTAINER DEFINITION ---
    // Consider removing this if using ElastiCache
    {
      "name": "redis",
      "image": "redis:6.2-alpine",
      "cpu": 512,
      "memory": 1024,
      "memoryReservation": 512,
      "portMappings": [], // No host port needed if only accessed by other containers in the task
      "essential": false, // If other services can function degraded without it, otherwise true
      "environment": [],
      // "environmentFiles": [],
      "mountPoints": [],
      "volumesFrom": [],
      "logConfiguration": {
        "logDriver": "awslogs",
        "options": {
          "awslogs-create-group": "true",
          "awslogs-group": "/ecs/storedog",
          "awslogs-region": "ap-southeast-2",
          "awslogs-stream-prefix": "ecs"
        }
      }
    },
    // --- YOUR BACKEND CONTAINER DEFINITION ---
    {
      "name": "backend",
      "image": "601427279990.dkr.ecr.ap-southeast-2.amazonaws.com/storedog/backend",
      "cpu": 512,
      "memory": 1024,
      "memoryReservation": 512,
      "links": ["postgres:postgres", "redis:redis"], // Adjust if removing postgres/redis containers
      "portMappings": [
        {
          "name": "backend-4000-tcp",
          "containerPort": 4000,
          "hostPort": 4000, // If directly exposed or for ALB target. Or 0 for dynamic.
          "protocol": "tcp",
          "appProtocol": "none"
        }
      ],
      "essential": true, // Likely essential
      "command": ["wait-for-it","postgres:5432","--","bundle","exec","rails","s","-b","0.0.0.0","-p","4000"],
      "environment": [
        {"name": "POSTGRES_USER", "value": "postgres"},
        {"name": "POSTGRES_PASSWORD", "value": "TYtSlJapmfN72hokCP6e"}, // Use Secrets Manager
        {"name": "RAILS_ENV", "value": "development"}, // Should be "production" for actual deployment
        {"name": "DB_HOST", "value": "postgres"}, // If using linked postgres container. If RDS, use RDS endpoint.
        {"name": "REDIS_URL", "value": "redis://redis:6379/0"}, // If using linked redis. If ElastiCache, use ElastiCache endpoint.
        {"name": "DISABLE_SPRING", "value": "1"}
      ],
      "logConfiguration": {
        "logDriver": "awslogs",
        "options": {
          "awslogs-create-group": "true",
          "awslogs-group": "/ecs/storedog",
          "awslogs-region": "ap-southeast-2",
          "awslogs-stream-prefix": "ecs"
        }
      }
    },
    // ... Other container definitions (ads-java, discounts, frontend, dd-agent, nginx) ...
    // Ensure similar review for environment variables (especially secrets and service endpoints)
    // and essential flags. Nginx will likely be essential and needs a hostPort for the ALB.
    // Frontend command should be `npm run start` for production, not `dev`.
  ],
  "volumes": [ // These volumes are for dd-agent to access Docker socket and host info
    { "name": "docker_sock", "host": { "sourcePath": "/var/run/docker.sock"}},
    { "name": "proc", "host": { "sourcePath": "/proc/"}},
    { "name": "cgroup", "host": { "sourcePath": "/sys/fs/cgroup/"}}
  ],
  "placementConstraints": [],
  "tags": []
}
